#!/bin/bash

set -e

export AWS_PROFILE=sandbox
export AWS_REGION=us-east-1

THIS_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"


function airflow() {
    export AIRFLOW_HOME="${THIS_DIR}/airflow"
    export AIRFLOW__CORE__LOAD_EXAMPLES=False
    export AWS_PROFILE=sandbox
    export AWS_REGION=us-east-1
    export AWS_DEFAULT_REGION=us-east-1
    uvx \
        --with "apache-airflow-providers-amazon" \
        --from "apache-airflow-core>=3.0.2" airflow ${@}
}

function start-airflow() {
    airflow standalone
}

THIS_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

function install-airflow {
    AIRFLOW_VERSION=3.0.2

    # Extract the version of Python you have installed. If you're currently using a Python version that is not supported by Airflow, you may want to set this manually.
    # See above for supported versions.
    PYTHON_VERSION="$(uv run -- python -c 'import sys; print(f"{sys.version_info.major}.{sys.version_info.minor}")')"

    CONSTRAINT_URL="https://raw.githubusercontent.com/apache/airflow/constraints-${AIRFLOW_VERSION}/constraints-${PYTHON_VERSION}.txt"
    # For example this would install 3.0.0 with python 3.9: https://raw.githubusercontent.com/apache/airflow/constraints-3.0.2/constraints-3.9.txt

    uv pip install "apache-airflow==${AIRFLOW_VERSION}" --constraint "${CONSTRAINT_URL}"
}


function cdk-bootstrap () {
    AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
    uv run -- cdk bootstrap "aws://${AWS_ACCOUNT_ID}/${AWS_REGION}"
}

function cdk-deploy () {
    uv run -- cdk deploy --app 'python cdk_app.py' '*' --profile $AWS_PROFILE --region $AWS_REGION
}

function cdk-destroy () {
    uv run -- cdk destroy --app 'python cdk_app.py' '*' --profile $AWS_PROFILE --region $AWS_REGION
}


# remove all files generated by tests, builds, or operating this codebase
function clean {
    rm -rf dist build coverage.xml test-reports sample/ tests/cookiecutter*json
    find . \
      -type d \
      \( \
        -name "*cache*" \
        -o -name "*.dist-info" \
        -o -name "*.egg-info" \
        -o -name "*htmlcov" \
        -o -name "*.metaflow" \
        -o -name "*.metaflow.s3" \
        -o -name "*.mypy_cache" \
        -o -name "*.pytest_cache" \
        -o -name "*.ruff_cache" \
        -o -name "*__pycache__" \
      \) \
      -not -path "*env/*" \
      -exec rm -r {} + || true

    find . \
      -type f \
      -name "*.pyc" \
      -o -name "*.DS_Store" \
      -o -name "*.coverage*" \
      -not -path "*env/*" \
      -exec rm {} +
}


# print all functions in this file
function help {
    echo "$0 <task> <args>"
    echo "Tasks:"
    compgen -A function | cat -n
}

TIMEFORMAT="Task completed in %3lR"
time ${@:-help}
